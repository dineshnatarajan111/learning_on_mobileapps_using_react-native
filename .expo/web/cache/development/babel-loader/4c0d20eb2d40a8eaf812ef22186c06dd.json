{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dineshnatarajan/developments/rn-starter/src/screens/SquareScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ColorCounter from \"./components/ColorCounter\";\n\nvar SquareScreen = function SquareScreen() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      red = _useState2[0],\n      setRed = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      blue = _useState4[0],\n      setBlue = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      green = _useState6[0],\n      setGreen = _useState6[1];\n\n  var setColor = function setColor(color, colorChange) {\n    switch (color) {\n      case 'red':\n        if ({\n          color: color\n        } + colorChange > 255 || {\n          color: color\n        } + colorChange < 0) {\n          return;\n        } else {\n          setRed(red + colorChange);\n        }\n\n        return;\n\n      case 'green':\n        if ({\n          color: color\n        } + colorChange > 255 || {\n          color: color\n        } + colorChange < 0) {\n          return;\n        } else {\n          setGreen(green + colorChange);\n        }\n\n        return;\n\n      case 'blue':\n        if ({\n          color: color\n        } + colorChange > 255 || {\n          color: color\n        } + colorChange < 0) {\n          return;\n        } else {\n          setBlue(blue + colorChange);\n        }\n\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return setColor('red', 10);\n    },\n    onDecrease: function onDecrease() {\n      return setColor('red', -1 * 10);\n    },\n    type: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return setColor('green', 10);\n    },\n    onDecrease: function onDecrease() {\n      return setColor('green', -1 * 10);\n    },\n    type: \"Green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return setColor('blue', 10);\n    },\n    onDecrease: function onDecrease() {\n      return setColor('blue', -1 * 10);\n    },\n    type: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100,\n      width: 100,\n      backgroundColor: \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  box: {}\n});\nexport default SquareScreen;","map":{"version":3,"sources":["/Users/dineshnatarajan/developments/rn-starter/src/screens/SquareScreen.js"],"names":["React","useState","ColorCounter","SquareScreen","red","setRed","blue","setBlue","green","setGreen","setColor","color","colorChange","height","width","backgroundColor","styles","StyleSheet","create","box"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\nimport ColorCounter from './components/ColorCounter';\n\nconst SquareScreen = () => {\nconst [red,setRed] = useState(0);\nconst [blue,setBlue] = useState(0);\nconst [green,setGreen] = useState(0);\n\nconst setColor = (color,colorChange) => {\n    switch (color) {\n        case 'red' :\n            if({color} + colorChange > 255 || {color} + colorChange < 0) {\n                return;\n            } else {\n                setRed(red + colorChange);\n            }\n            return;\n        case 'green' :\n            if({color} + colorChange > 255 || {color} + colorChange < 0) {\n                return;\n            } else {\n                setGreen(green + colorChange);\n            }\n            return;\n        case 'blue' :\n            if({color} + colorChange > 255 || {color} + colorChange < 0) {\n                return;\n            } else {\n                setBlue(blue + colorChange);\n            }\n            return;\n        default :\n            return;\n    }\n} ;\n\n\n    return(\n        <View>\n            <ColorCounter \n             onIncrease = { () => setColor('red', 10)}\n             onDecrease = { () => setColor('red', -1 * 10)}\n             type=\"Red\" />\n            <ColorCounter\n             onIncrease = { () => setColor('green', 10)}\n             onDecrease = { () => setColor('green', -1 * 10)}\n             type=\"Green\" />\n            <ColorCounter \n             onIncrease = { () => setColor('blue', 10)}\n             onDecrease = { () => setColor('blue', -1 * 10)}\n             type=\"Blue\" />\n             <View style={{\n                 height:100,\n                 width:100,\n                 backgroundColor: `rgb(${red},${green},${blue})`\n                 }} \n            />\n        </View>\n    );\n};\n\nconst styles= StyleSheet.create({\n    box:{\n        \n    },\n});\n\nexport default SquareScreen;"]},"metadata":{},"sourceType":"module"}