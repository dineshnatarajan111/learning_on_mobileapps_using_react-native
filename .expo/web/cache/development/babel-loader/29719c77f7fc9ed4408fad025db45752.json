{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dineshnatarajan/developments/rn-starter/src/screens/ColorScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Add Color\",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [RandomRgb()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar RandomRgb = function RandomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["/Users/dineshnatarajan/developments/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","RandomRgb","item","height","width","backgroundColor","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACKD,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACfE,MADe;AAAA,MACPC,SADO;;AAEtB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,WADP;AAEC,IAAA,OAAO,EAAG,mBAAM;AACbA,MAAAA,SAAS,8BAAKD,MAAL,IAAaE,SAAS,EAAtB,GAAT;AACF,KAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAQA,oBAAC,QAAD;AACC,IAAA,YAAY,EAAG,sBAACC,IAAD;AAAA,aAAUA,IAAV;AAAA,KADhB;AAEC,IAAA,IAAI,EAAEH,MAFP;AAGC,IAAA,UAAU,EAAG,0BAAY;AAAA,UAAVG,IAAU,QAAVA,IAAU;AACtB,aACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAC,GAAT;AAAaC,UAAAA,KAAK,EAAE,GAApB;AAAwBC,UAAAA,eAAe,EAAEH;AAAzC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAGF,KAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,CADJ;AAoBH,CAtBD;;AAwBA,IAAMD,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA,kBAAcH,GAAd,SAAqBI,KAArB,SAA8BC,IAA9B;AACH,CALD;;AAOA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAehB,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport { View, Text, StyleSheet, Button, FlatList} from 'react-native';\n\nconst ColorScreen = () => {\n    const [colors, setColors]= useState([]);\n    return(\n        <View>\n        <Button\n         title=\"Add Color\"\n         onPress={ () => {\n            setColors([...colors, RandomRgb()]);\n         }} \n        />\n        \n        <FlatList \n         keyExtractor={ (item) => item }\n         data={colors}\n         renderItem={ ({item}) => {\n            return( \n            <View style={{ height:100,width: 100,backgroundColor: item }} />\n            );\n         }}\n        />\n        </View>\n    );\n};\n\nconst RandomRgb = () => {\n    const red = Math.floor(Math.random() * 256);\n    const green = Math.floor(Math.random() * 256);\n    const blue = Math.floor(Math.random() * 256);\n    return `rgb(${red},${green},${blue})`;\n};\n\nconst styles = StyleSheet.create({\n\n});\n\nexport default ColorScreen;"]},"metadata":{},"sourceType":"module"}